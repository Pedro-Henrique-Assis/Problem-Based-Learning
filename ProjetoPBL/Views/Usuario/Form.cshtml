@model UsuarioViewModel
@{
    Layout = null;
    ViewData["Title"] = (ViewBag.Operacao == "I" ? "Cadastro" : "Alteração") + " de Usuário";
}

<head>
    <link rel="stylesheet" href="~/css/cadastroUsuario.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
</head>

<div class="container-externo-forms">

    <form asp-controller="Usuario" asp-action="Save" enctype="multipart/form-data" method="post">
        <div class="title">@ViewData["Title"]</div>

        <div class="form-body">
            <input type="hidden" name="Operacao" value="@ViewBag.Operacao" />
            <input asp-for="Id" type="hidden" readonly />
            <input type="hidden" asp-for="RemoverImagemAtual" id="RemoverImagemAtual" value="false" />

            <label for="Nome">Insira o seu nome completo</label>
            <input asp-for="Nome" />
            <span asp-validation-for="Nome"></span>
            <br />

            <label for="Email">Insira o seu email</label>
            <input asp-for="Email" />
            <span asp-validation-for="Email"></span>
            <br />

            <label for="DataNascimento">Insira a sua data de nascimento</label>
            <input asp-for="DataNascimento" type="date" value="@Model.DataNascimento.ToString("yyyy-MM-dd")" />
            <span asp-validation-for="DataNascimento"></span>
            <br />

            <label for="SexoId">Selecione o seu gênero</label>
            <select asp-for="SexoId" asp-items="ViewBag.Sexos"> </select>
            <span asp-validation-for="SexoId"></span>
            <br />

            <div class="cep-wrapper">
                <div class="cep-input">
                    <label for="Cep">Insira o cep</label>
                    <input asp-for="Cep" id="cep" />
                    <span asp-validation-for="Cep"></span>
                </div>
                <div class="cep-button">
                    <input type="button" name="btnBuscaCEP" value="Buscar" onclick="buscaCEP()" class="btn-busca-cep" />
                </div>
            </div>
            <br />

            <label for="Logradouro">Insira o endereço</label>
            <input asp-for="Logradouro" id="logradouro" />
            <span asp-validation-for="Logradouro"></span>
            <br />

            <label for="Numero">Insira o número da residência</label>
            <input asp-for="Numero" id="numero" />
            <span asp-validation-for="Numero"></span>
            <br />

            <label for="Cidade">Insira a sua cidade</label>
            <input asp-for="Cidade" id="cidade" />
            <span asp-validation-for="Cidade"></span>
            <br />

            <label for="Estado">Insira o seu Estado</label>
            <input asp-for="Estado" id="estado" />
            <span asp-validation-for="Estado"></span>
            <br />

            <label for="LoginUsuario">Insira seu usuario</label>
            <input asp-for="LoginUsuario" />
            <span asp-validation-for="LoginUsuario"></span>
            <br />

            <label for="Senha">Insira sua senha</label>
            <input asp-for="Senha" type="password" />
            <span asp-validation-for="Senha"></span>
            <br />

            <div class="image-upload-wrapper">
                <label for="Imagem" class="botao-upload">
                    <i class="fas fa-upload"></i> Escolha sua foto de perfil
                </label>
                <input asp-for="Imagem" id="Imagem" type="file" accept="image/*" />
                <img id="imgPreview" src="data:image/jpeg;base64,@Model.ImagemEmBase64" alt="Prévia" width="100">
                <button type="button" id="removeImageBtn" class="btn-remover-imagem">
                    <i class="fas fa-times"></i> Remover
                </button>
                <span asp-validation-for="Imagem"></span>
            </div>

            <br />
            <input type="submit" value="Finalizar cadastro" />
            <br />
        </div>
        
    </form>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script>
    function buscaCEP() {
        var cep = document.getElementById("cep").value;
        cep = cep.replace(/[^0-9]/g, ''); // Removemos tudo que não é dígito

        if (cep.length === 8) { // Verifica se temos 8 dígitos
            var linkAPI = 'https://viacep.com.br/ws/' + cep + '/json/';
            $.ajax({
                url: linkAPI,
                dataType: 'json', // Informa ao jQuery para esperar JSON
                beforeSend: function () {
                    document.getElementById("logradouro").value = '...';
                    document.getElementById("cidade").value = '...';
                    document.getElementById("estado").value = '...';
                },
                success: function (dados) {
                    if (dados.erro != undefined) { // quando o CEP não existe...
                        alert('CEP não localizado...');
                        document.getElementById("logradouro").value = '';
                        document.getElementById("cidade").value = '';
                        document.getElementById("estado").value = '';
                    }
                    else { // quando o CEP existe
                        document.getElementById("logradouro").value = dados.logradouro;
                        document.getElementById("cidade").value = dados.localidade;; // Usa 'localidade' da API para 'cidade'
                        document.getElementById("estado").value = dados.estado;
                        $("#numero").focus(); // Foca no campo número após o sucesso
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    alert('Falha ao buscar CEP. Verifique o CEP ou a conexão.');
                    console.error("Erro ViaCEP:", textStatus, errorThrown);
                    $("#logradouro").val('');
                    $("#cidade").val('');
                    $("#estado").val('');
                }
            });
        } else if (cep.length > 0) {
            alert('CEP inválido. Deve conter 8 dígitos.');
            document.getElementById("logradouro").value = '';
            document.getElementById("cidade").value = '';
            document.getElementById("estado").value = '';
        } else {
            alert('Por favor, digite um CEP.');
        }
    }

    document.addEventListener("DOMContentLoaded", function() {
        const inputImagem = document.getElementById("Imagem");
        const imgPreview = document.getElementById("imgPreview");
        const nomeArquivoSpan = document.getElementById("nome-arquivo");
        const removeImageBtn = document.getElementById("removeImageBtn");
        const removerImagemAtualInput = document.getElementById("RemoverImagemAtual");

        const defaultPreviewSrc = "data:image/jpeg;base64,@Model.ImagemEmBase64";
        const hasExistingImage = defaultPreviewSrc && !defaultPreviewSrc.endsWith("base64,");

        // Função para atualizar a UI (Interface do Usuário)
        function updateUI(showPreview, showRemoveBtn, fileName) {
            imgPreview.style.display = showPreview ? 'inline-block' : 'none';
            removeImageBtn.style.display = showRemoveBtn ? 'inline-block' : 'none';
            nomeArquivoSpan.textContent = fileName || "Nenhum arquivo selecionado";

            if (showPreview && imgPreview.src.endsWith("base64,")) {
                imgPreview.style.display = 'none'; // Não mostrar se for base64 vazia
            }
        }

        // Evento ao selecionar um arquivo
        inputImagem.addEventListener('change', function () {
            if (inputImagem.files && inputImagem.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imgPreview.src = e.target.result;
                    updateUI(true, true, inputImagem.files[0].name);
                };
                reader.readAsDataURL(inputImagem.files[0]);
                removerImagemAtualInput.value = "false";
            }
        });

        // Evento ao clicar no botão de remover
        removeImageBtn.addEventListener('click', function () {
            inputImagem.value = null; // Limpa o input
            imgPreview.src = '';      // Limpa a pré-visualização
            updateUI(false, false, null); // Atualiza a UI
            removerImagemAtualInput.value = "true"; // Marca para remoção
        });

        // Configuração inicial ao carregar a página
        if (hasExistingImage) {
                imgPreview.src = defaultPreviewSrc;
                updateUI(true, true, "Imagem atual carregada");
        } else {
                updateUI(false, false, null);
        }
    });
</script>
